#!/usr/bin/env node
const yargs = require('yargs');
const path = require('path');
const { system } = require('@foxman/helpers');
const updateNotifier = require('update-notifier');
const checkNodeVersion = require('./check-node-version');
const checkFoxmanVersion = require('./check-foxman-version');
const checkFoxmanConfig = require('./check-foxman-config');
const run = require('./run');
const pkg = require('../package.json');

if (!checkNodeVersion()) {
    system.exit(1);
}

updateNotifier({ pkg }).notify();

const argv = yargs
    .usage('Usage: foxman [options]')
    .alias('C', 'config')
    .alias('C', 'c')
    .describe('C', '配置文件路径')
    .default('C', 'foxman.config.js')
    .alias('P', 'proxy')
    .describe('P', '使用配置中的代理，填写代理名即可')
    .default('P', false)
    .alias('p', 'port')
    .describe('p', '指定临时端口')
    .default('p', false)
    .alias('U', 'update')
    .alias('U', 'u')
    .describe('U', '是否远程nei中拉取接口信息')
    .default('U', false)
    .alias('V', 'version')
    .alias('V', 'v')
    .describe('V', 'Show version')
    .version(() => `v${pkg.version}`)
    .help('H')
    .alias('H', 'help')
    .alias('H', 'h')
    .example('foxman --config ./config.js --proxy local --update').argv;

const configPath = path.join(process.cwd(), argv.config);

if (!checkFoxmanConfig(configPath)) {
    system.exit(1);
}

const config = require(configPath);

if (!checkFoxmanVersion(config.upgrade)) {
    system.exit(1);
}

run(Object.assign({}, config, { argv, configPath }));
